[{"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\index.js":"1","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\App.js":"2","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\reportWebVitals.js":"3","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\routes.js":"4","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\store.js":"5","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\Home.js":"6","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\reducers\\index.js":"7","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\sagas\\index.js":"8","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\customer\\customerList\\index.js":"9","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\transaction\\transactionList\\index.js":"10","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\customer\\customerForm\\index.js":"11","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\reducers\\customerReducer.js":"12","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\sagas\\customerSaga.js":"13","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\sagas\\transactionSaga.js":"14","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\reducers\\transactionReducer.js":"15","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\customer\\customerForm\\CustomerForm.js":"16","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\customer\\customerList\\CustomerList.js":"17","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\transaction\\transactionList\\TransactionList.js":"18","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\api.js":"19","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\actions\\customerAction.js":"20","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\constants\\actions.js":"21","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\transaction\\transactionList\\TransactionRow.js":"22","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\actions\\transactionAction.js":"23","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\customer\\customerList\\CustomerRow.js":"24","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\components\\Containers\\Container.js":"25","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\components\\DropdownList\\DropdownList.js":"26","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\home\\HomeMaster.js":"27","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\login\\SignUp.js":"28","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\login\\SignIn.js":"29","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\components\\not-use\\index.js":"30","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\components\\navbar\\NavbarMaster.js":"31","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\components\\navbar\\NavbarAdmin.js":"32","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\home\\card\\CardboxMaster.js":"33","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\transaction\\transactionForm\\index.js":"34","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\transaction\\transactionForm\\TransactionForm.js":"35","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\components\\Containers\\index.js":"36","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\customer\\customerForm\\Coba\\CobainForm.js":"37"},{"size":549,"mtime":1616043694000,"results":"38","hashOfConfig":"39"},{"size":846,"mtime":1616056493254,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":1616043694000,"results":"41","hashOfConfig":"39"},{"size":1691,"mtime":1616125638657,"results":"42","hashOfConfig":"39"},{"size":339,"mtime":1616043694000,"results":"43","hashOfConfig":"39"},{"size":672,"mtime":1616043694000,"results":"44","hashOfConfig":"39"},{"size":631,"mtime":1616077817662,"results":"45","hashOfConfig":"39"},{"size":605,"mtime":1616077432277,"results":"46","hashOfConfig":"39"},{"size":38,"mtime":1616043694000,"results":"47","hashOfConfig":"39"},{"size":41,"mtime":1616043694000,"results":"48","hashOfConfig":"39"},{"size":38,"mtime":1616043694000,"results":"49","hashOfConfig":"39"},{"size":3174,"mtime":1616043694000,"results":"50","hashOfConfig":"39"},{"size":2190,"mtime":1616043694000,"results":"51","hashOfConfig":"39"},{"size":2782,"mtime":1616077432422,"results":"52","hashOfConfig":"39"},{"size":3541,"mtime":1616077817530,"results":"53","hashOfConfig":"39"},{"size":9792,"mtime":1616129238846,"results":"54","hashOfConfig":"39"},{"size":3090,"mtime":1616071092582,"results":"55","hashOfConfig":"39"},{"size":2998,"mtime":1616075430563,"results":"56","hashOfConfig":"39"},{"size":493,"mtime":1616043694000,"results":"57","hashOfConfig":"39"},{"size":547,"mtime":1616078537843,"results":"58","hashOfConfig":"39"},{"size":1649,"mtime":1616077432360,"results":"59","hashOfConfig":"39"},{"size":1181,"mtime":1616129533734,"results":"60","hashOfConfig":"39"},{"size":588,"mtime":1616077432486,"results":"61","hashOfConfig":"39"},{"size":1918,"mtime":1616076102761,"results":"62","hashOfConfig":"39"},{"size":474,"mtime":1616043694000,"results":"63","hashOfConfig":"39"},{"size":793,"mtime":1616043694000,"results":"64","hashOfConfig":"39"},{"size":1613,"mtime":1616054338281,"results":"65","hashOfConfig":"39"},{"size":12462,"mtime":1616052909122,"results":"66","hashOfConfig":"39"},{"size":5906,"mtime":1616051882680,"results":"67","hashOfConfig":"39"},{"size":1864,"mtime":1616043694000,"results":"68","hashOfConfig":"39"},{"size":3451,"mtime":1616056897667,"results":"69","hashOfConfig":"39"},{"size":4236,"mtime":1616051837143,"results":"70","hashOfConfig":"39"},{"size":2727,"mtime":1616054464437,"results":"71","hashOfConfig":"39"},{"size":41,"mtime":1616077432061,"results":"72","hashOfConfig":"39"},{"size":10057,"mtime":1616129238764,"results":"73","hashOfConfig":"39"},{"size":35,"mtime":1616043694000,"results":"74","hashOfConfig":"39"},{"size":2688,"mtime":1616123789866,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1mijtmd",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\index.js",[],["160","161"],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\App.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\reportWebVitals.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\routes.js",["162"],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\store.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\Home.js",["163"],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\reducers\\index.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\sagas\\index.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\customer\\customerList\\index.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\transaction\\transactionList\\index.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\customer\\customerForm\\index.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\reducers\\customerReducer.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\sagas\\customerSaga.js",["164"],"import { put, takeLatest } from \"redux-saga/effects\"\nimport {\n  FIND_ALL_CUSTOMER_FAILURE,\n  FIND_ALL_CUSTOMER_SUCCESS,\n  FIND_ALL_CUSTOMER,\n\n  SAVE_CUSTOMER,\n  SAVE_CUSTOMER_FAILURE,\n  SAVE_CUSTOMER_SUCCESS,\n\n  FIND_CUSTOMER_BY_ID,\n  FIND_CUSTOMER_BY_ID_FAILURE,\n  FIND_CUSTOMER_BY_ID_SUCCESS, UPDATE_CUSTOMER\n\n} from \"../constants/actions\"\nimport axios from \"../api\"\nimport {updateCustomer} from \"../../actions/customerAction\";\n\nfunction* findAllCustomerSaga() {\n\n  let result = yield axios.get(\"/customer\")\n    .then(data => {\n      // console.log(\"SAGAAAA\",data)\n      return ({\n        type: FIND_ALL_CUSTOMER_SUCCESS,\n        data: data\n      })\n    })\n    .catch(err => {\n      return ({\n        type: FIND_ALL_CUSTOMER_FAILURE,\n        error: err\n      })\n    })\n  yield put(result)\n}\n\nfunction* saveCustomerSaga(action) {\n  let model = action.model;\n  let method = 'POST', url = '/customer';\n  if (model.id) {\n    method = \"PUT\";\n    url += `/${model.id}`\n  }\n\n  let result = yield axios({\n    url: url,\n    method: method,\n    data: model\n  })\n    .then( data => {\n      return {\n        type: SAVE_CUSTOMER_SUCCESS,\n        data: data\n      }\n    })\n    .catch(e => {\n      return {\n        type: SAVE_CUSTOMER_FAILURE,\n        error: e\n      }\n    })\n    yield put(result)\n}\n\nfunction* findCustomerByIdSaga(action) {\n  let result = yield axios.get(`/customer/${action.id}`)\n      .then(data => {\n        return ({\n          type: FIND_CUSTOMER_BY_ID_SUCCESS,\n          data: data\n        })\n      })\n      .catch(e => {\n        return ({\n          type: FIND_CUSTOMER_BY_ID_FAILURE,\n          error: e\n        })\n      })\n  yield put(result)\n}\n\nfunction* updateCustomerSaga(action) {\n  let result = false\n\n  yield put({\n    type: UPDATE_CUSTOMER,\n    data: result\n  })\n}\n\n\nexport function* watchFindAllCustomer() {\n  yield takeLatest(FIND_ALL_CUSTOMER, findAllCustomerSaga)\n}\n\nexport function* watchSaveCustomer() {\n  yield takeLatest(SAVE_CUSTOMER, saveCustomerSaga)\n}\n\nexport function* watchFindCustomerById() {\n  yield takeLatest(FIND_CUSTOMER_BY_ID, findCustomerByIdSaga)\n}\n\nexport function* watchUpdateCustomer() {\n  yield takeLatest(UPDATE_CUSTOMER, updateCustomerSaga)\n}\n","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\sagas\\transactionSaga.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\reducers\\transactionReducer.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\customer\\customerForm\\CustomerForm.js",["165","166","167","168","169","170","171","172","173","174"],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\customer\\customerList\\CustomerList.js",["175"],"import React, {useEffect} from 'react'\nimport {Link} from \"react-router-dom\"\nimport CustomerRow from \"./CustomerRow\"\nimport {findAllCustomerAction} from '../../../actions/customerAction'\nimport {connect} from \"react-redux\"\nimport {Button, Table, Container} from \"reactstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\nimport Containers from \"../../../components/Containers/Container\";\nimport HeaderMaster from \"../../../components/navbar/NavbarMaster\";\n\nfunction CustomerList({\n                          error,\n                          isLoading,\n                          customers,\n                          findAllCustomerAction\n                      }) {\n\n    const onReload = () => {\n        findAllCustomerAction();\n    };\n\n    useEffect(onReload, [findAllCustomerAction])\n\n    return (\n        <Containers error={error}>\n            <HeaderMaster/>\n            <Container fluid style={{width:\"90%\"}}>\n                <div>\n                    <div className=\"d-flex justify-content-center mb-3\">\n                        <h1 style={{fontSize:\"3vw\", color:\"#e42556\", margin:\"3%\", textAlign:\"center\"}}>Customer List</h1>\n                    </div>\n\n                    <Button href=\"/customer/form\" style={{background:\"#e42256\"}}>\n                        <FontAwesomeIcon icon={faSave}/> Add\n                    </Button>\n                    <Table bordered style={{marginTop: '10px'}}>\n                        <thead>\n                        <tr>\n                            <th>Number</th>\n                            <th>Full Name</th>\n                            <th>Id Card</th>\n                            <th>Email</th>\n                            {/*<th>Address</th>*/}\n                            <th>Employee Type</th>\n                            {/*<th>Need Type</th>*/}\n                            <th>Action</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n\n                        {\n                            !isLoading ?\n\n                                customers?.list?.map((e, i) => {\n\n                                    return (\n                                        <CustomerRow key={i} data={e} number={(customers.page * customers.size) + 1 + i} />\n                                    )\n                                })\n                                :\n                                <tr>\n                                    <td colSpan=\"3\"> Loading..</td>\n                                </tr>\n                        }\n                        </tbody>\n                    </Table>\n\n                </div>\n            </Container>\n        </Containers>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        error: state.findAllCustomerReducer.error,\n        customers: state.findAllCustomerReducer.data || [],\n        isLoading: state.findAllCustomerReducer.isLoading\n    }\n}\n\nconst mapDispatchToProps = {\n    findAllCustomerAction\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerList)\n","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\transaction\\transactionList\\TransactionList.js",["176","177","178","179"],"import {Button, Container, Table} from \"reactstrap\";\nimport Containers from '../../../components/Containers/Container'\nimport React, {useEffect} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {findAllTransactionAction} from \"../../../actions/transactionAction\";\nimport TransactionRow from \"./TransactionRow\";\nimport HeaderMaster from \"../../../components/navbar/NavbarMaster\";\n\nfunction TransactionList({\n                             isLoading,\n                             transactions,\n                             error,\n                             findAllTransactionAction\n                         }) {\n\n    const onReload = () => {\n        findAllTransactionAction();\n    };\n\n    useEffect(onReload, [findAllTransactionAction])\n\n    return (\n        <Containers error={error}>\n            <HeaderMaster/>\n            <Container fluid style={{width:\"90%\"}}>\n                <div>\n                    <div className=\"d-flex justify-content-center mb-3\">\n                        <h1 style={{fontSize:\"3vw\", color:\"#e42556\", margin:\"3%\", textAlign:\"center\"}}>Transaction List</h1>\n                    </div>\n\n                    <Table bordered style={{marginTop: '10px'}}>\n                        <thead>\n                        <tr>\n                            <th>No</th>\n                            <th>Name</th>\n                            <th>Employee Type</th>\n                            <th>Need Type</th>\n                            <th>Loan</th>\n                            <th>Tenor</th>\n                            <th>Interest Rate</th>\n                            <th>Action</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {console.log(\"TESSSST\", transactions)}\n                        {\n                            !isLoading?\n                                transactions?.list?.map( (e, i) => {\n                                    return (\n                                        <TransactionRow key={i} data={e} number={(transactions.page*transactions.size)+1 + i} />\n                                    )\n                                }):\n                                <tr>\n                                    <td colSpan=\"3\"> Loading..</td>\n                                </tr>\n                        }\n                        </tbody>\n                    </Table>\n                </div>\n\n            </Container>\n        </Containers>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        error: state.finAllTransactionReducer.error,\n        transactions: state.finAllTransactionReducer.data || [],\n        isLoading: state.finAllTransactionReducer.isLoading\n    }\n}\n\nconst mapDispatchToProps = {\n    findAllTransactionAction\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionList);","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\api.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\actions\\customerAction.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\configs\\constants\\actions.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\transaction\\transactionList\\TransactionRow.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\actions\\transactionAction.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\customer\\customerList\\CustomerRow.js",["180","181"],"import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {Button} from \"reactstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faHandshake, faInfoCircle, faPencilAlt, faSave, faTrash} from \"@fortawesome/free-solid-svg-icons\";\n\nconst CustomerRow = ({data, onUpdate, number}) => {\n    return (\n        <tr>\n            <td>{number}</td>\n            <td>{data.name}</td>\n            <td>{data.idNumber} </td>\n            <td>{data.email}</td>\n            {/*<td>{data.address}</td>*/}\n            <td>{data.employeeType}</td>\n            {/*<td>{data.needType}</td>*/}\n            <td>\n                <Button href={`/customer/detail/${data.id}`} style={{background:\"#e42256\"}}>\n                    <FontAwesomeIcon icon={faInfoCircle}/>\n                </Button>{' '}\n                <Button href={`/customer/edit/${data.id}`} style={{background:\"#e42256\"}}>\n                    <FontAwesomeIcon icon={faPencilAlt}/>\n                </Button>{' '}\n                <Button href={`/transaction/form/${data.id}`} style={{background:\"#e42256\"}}>\n                    <FontAwesomeIcon icon={faHandshake}/>\n                </Button>{' '}\n                <Button style={{background:\"#e42256\"}}>\n                    <FontAwesomeIcon icon={faTrash}/>\n                </Button>{' '}\n                {/*<Button outline color=\"primary\">*/}\n                {/*    <Link to={`/customer/detail/${data.id}`}>Detail</Link>*/}\n                {/*</Button>{' '}*/}\n                {/*<Button onClick={onUpdate} outline color=\"primary\">*/}\n                {/*    <Link to={`/customer/edit/${data.id}`}>Edit</Link>*/}\n                {/*</Button>{' '}*/}\n                {/*<Button outline color=\"primary\">*/}\n                {/*    <Link to={`/transaction/form/${data.id}`}>Transaction</Link>*/}\n                {/*</Button>*/}\n            </td>\n        </tr>\n    )\n}\n\nexport default CustomerRow;\n","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\components\\Containers\\Container.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\components\\DropdownList\\DropdownList.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\home\\HomeMaster.js",["182"],"import React, {Component} from \"react\";\r\nimport CardboxMaster from \"./card/CardboxMaster\";\r\nimport {Row, Button, Jumbotron, Col} from \"reactstrap\";\r\nimport './home.css';\r\nimport Image from \"../../assets/images/undraw_Code_thinking_re_gka2.svg\"\r\nimport HeaderMaster from \"../../components/navbar/NavbarMaster\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass HomeMaster extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HeaderMaster/>\r\n                <div className=\"jumbotron\">\r\n                    <Jumbotron className=\"jumbotron-fluid\" style={{height:\"30vh\"}}>\r\n                        <Row style={{marginTop:\"-5%\"}}>\r\n                            <Col>\r\n                                <h1 style={{color: \"#e42256\", fontSize:\"5vw\", marginLeft:\"15%\"}}>Hello, Admin!</h1>\r\n                                <p style={{fontSize:\"2vw\", marginLeft:\"15%\"}}>What do you want to do?</p>\r\n                                <Button href=\"/register\" style={{background:\"#e42256\", marginLeft:\"15%\", marginTop:\"5%\"}}><FontAwesomeIcon icon={faPlus}/> New Account</Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <img src = {Image} alt=\"image\" className=\"img-fluid float-right\" style={{marginRight:\"15%\"}}/>\r\n                            </Col>\r\n                        </Row>\r\n                    </Jumbotron>\r\n                </div>\r\n                <CardboxMaster/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeMaster;","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\login\\SignUp.js",["183","184","185","186","187","188","189","190","191"],"import React, {useState} from 'react';\r\nimport undraw_Updated_resume_re_q1or from \"../../assets/images/undraw_Updated_resume_re_q1or.svg\"\r\nimport {\r\n    faEnvelope,\r\n    faKey,\r\n    faServer,\r\n    faUser,\r\n    faUserCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport \"./login.css\"\r\nimport {FormText, Input, Label, FormGroup, Button} from \"reactstrap\";\r\nimport Header from \"../../components/navbar/NavbarAdmin\";\r\nimport swal from 'sweetalert';\r\n\r\nconst SignUp = () => {\r\n\r\n    const [fullName, setFullName] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [role, setRole] = useState('');\r\n    const [profilePicture, setProfilePicture] = useState('');\r\n\r\n    const [fullNameError, setFullNameError] = useState('');\r\n    const [usernameError, setUsernameError] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n    const [roleError, setRoleError] = useState('');\r\n    const [profilePictureError, setProfilePictureError] = useState('');\r\n\r\n    const onSubmit = () => {\r\n        const isValid = validate();\r\n\r\n        if (isValid) {\r\n            const data = {\r\n                fullName: fullName,\r\n                username: username,\r\n                email: email,\r\n                password: password,\r\n                role: role,\r\n                profilePicture: profilePicture\r\n            }\r\n            //axios\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        let fullNameError = \"\";\r\n        let usernameError = \"\";\r\n        let emailError = \"\";\r\n        let passwordError = \"\";\r\n        let roleError = \"\";\r\n        let profilePictureError = \"\";\r\n\r\n        if (!fullName) {\r\n            fullNameError = \"*please enter fullname\"\r\n        }\r\n        if (!username) {\r\n            usernameError = \"*please enter username\"\r\n        }\r\n        if (!email) {\r\n            emailError = \"*please enter email\"\r\n        }\r\n        if (!password) {\r\n            passwordError = \"*please enter password\"\r\n        }\r\n        if (!role) {\r\n            roleError = \"*please select one\"\r\n        }\r\n        if (!profilePicture) {\r\n            profilePictureError = \"*please upload photo\"\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const handleFullNameChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setFullName(inputValue)\r\n        setFullNameError(isEmpty)\r\n    }\r\n\r\n    const handleUsernameChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setUsername(inputValue)\r\n        setUsernameError(isEmpty)\r\n    }\r\n\r\n    const handleEmailChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setEmail(inputValue)\r\n        setEmailError(isEmpty)\r\n    }\r\n\r\n    const handlePasswordChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setPassword(inputValue)\r\n        setPasswordError(isEmpty)\r\n    }\r\n\r\n    const handleRoleChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setRole(inputValue)\r\n        setRoleError(isEmpty)\r\n    }\r\n\r\n    const handleProfilPictureChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setProfilePicture(inputValue)\r\n        setProfilePictureError(isEmpty)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header/>\r\n\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row align-items-center\">\r\n\r\n                    <div className=\"col-md-5 pr-lg-5 mb-5 mb-md-0\">\r\n                        <img src={undraw_Updated_resume_re_q1or} alt=\"\" className=\"img-fluid mb-3 d-none d-md-block\"/>\r\n                        <h1 style={{color: \"#e42256\", fontSize: \"55px\"}}>Create new account</h1>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n                        <form>\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"input-group col-lg-12 mb-4\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUserCircle}/>\r\n                                        </span>\r\n                                    </div>\r\n                                    <input id=\"fullname\"\r\n                                           type=\"text\"\r\n                                           name=\"fullname\"\r\n                                           placeholder=\"Full Name\"\r\n                                           onChange={(e) => handleFullNameChange(e)}\r\n                                           className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                </div>\r\n                                <div style={{\r\n                                    marginLeft:\"20px\",\r\n                                    marginTop:\"-25px\",\r\n                                    marginBottom:\"20px\",\r\n                                    color:\"red\"}}>\r\n                                    {fullNameError}\r\n                                </div>\r\n\r\n                                <div className=\"input-group col-lg-12 mb-4\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUser}/>\r\n                                        </span>\r\n                                    </div>\r\n                                    <input id=\"username\"\r\n                                           type=\"text\"\r\n                                           name=\"username\"\r\n                                           placeholder=\"Username\"\r\n                                           onChange={(e) => handleUsernameChange(e)}\r\n                                           className=\"form-control bg-white border-left-0 border-md\"/>\r\n                                </div>\r\n                                <div style={{\r\n                                    marginLeft:\"20px\",\r\n                                    marginTop:\"-25px\",\r\n                                    marginBottom:\"20px\",\r\n                                    color:\"red\"}}>\r\n                                    {usernameError}\r\n                                </div>\r\n\r\n\r\n                                <div className=\"input-group col-lg-12 mb-4\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faEnvelope}/>\r\n                                        </span>\r\n                                    </div>\r\n                                    <input id=\"email\"\r\n                                           type=\"email\"\r\n                                           name=\"email\"\r\n                                           placeholder=\"Email Address\"\r\n                                           onChange={(e) => handleEmailChange(e)}\r\n                                           className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                </div>\r\n                                <div style={{\r\n                                    marginLeft:\"20px\",\r\n                                    marginTop:\"-25px\",\r\n                                    marginBottom:\"20px\",\r\n                                    color:\"red\"}}>\r\n                                    {emailError}\r\n                                </div>\r\n\r\n                                <div className=\"input-group col-lg-12 mb-4\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faKey}/>\r\n                                        </span>\r\n                                    </div>\r\n                                    <input id=\"password\"\r\n                                           type=\"password\"\r\n                                           name=\"password\"\r\n                                           placeholder=\"Password\"\r\n                                           onChange={(e) => handlePasswordChange(e)}\r\n                                           className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                </div>\r\n                                <div style={{\r\n                                    marginLeft:\"20px\",\r\n                                    marginTop:\"-25px\",\r\n                                    marginBottom:\"20px\",\r\n                                    color:\"red\"}}>\r\n                                    {passwordError}\r\n                                </div>\r\n\r\n                                <div className=\"input-group col-lg-12 mb-4\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faServer}/>\r\n                                        </span>\r\n                                    </div>\r\n                                    <select id=\"job\" name=\"jobtitle\"\r\n                                            className=\"form-control custom-select bg-white border-left-0 border-md\">\r\n                                        <option selected>---Choose the role---</option>\r\n                                        <option value=\"1\">Supervisor</option>\r\n                                        <option value=\"2\">Staff</option>\r\n                                        onChange={(e) => handleRoleChange(e)}\r\n                                    </select><br/>\r\n                                </div>\r\n                                <div style={{\r\n                                    marginLeft:\"20px\",\r\n                                    marginTop:\"-25px\",\r\n                                    marginBottom:\"20px\",\r\n                                    color:\"red\"}}>\r\n                                    {roleError}\r\n                                </div>\r\n\r\n                                <div className=\"input-group col-lg-12 mb-4\">\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleFile\">File</Label>\r\n                                        <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\r\n                                        <FormText color=\"muted\">\r\n                                            max/min size 500kb.\r\n                                        </FormText>\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div style={{\r\n                                    marginLeft: \"20px\",\r\n                                    marginTop: \"-25px\",\r\n                                    marginBottom: \"20px\",\r\n                                    color: \"red\"\r\n                                }}>\r\n                                    {profilePictureError}\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                    <Button style={{background: \"#e42256\"}} onClick={() => onSubmit()} href=\"/master/home\" block>\r\n                                            <span className=\"font-weight-bold\"\r\n                                                  style={{color: \"#ffff\"}}>CREATE ACCOUNT</span>\r\n                                    </Button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SignUp;","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\login\\SignIn.js",["192","193"],"import React, {useState} from \"react\";\r\nimport {faKey, faUser} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {Button} from \"reactstrap\";\r\nimport undraw_Access_account_re_8spm from \"../../assets/images/undraw_Access_account_re_8spm.svg\"\r\nimport \"./login.css\"\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst SignIn = () => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [usernameError, setUsernameError] = useState('')\r\n    const [passwordError, setPasswordError] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const onSubmit = () => {\r\n        const isValid = validate();\r\n\r\n        if (isValid) {\r\n            const data = {\r\n                username: username,\r\n                password: password\r\n            }\r\n            history.push('/master/home')\r\n            //axios\r\n        }\r\n    }\r\n    //\r\n\r\n    const validate = () => {\r\n        let usernameError = \"\";\r\n        let passwordError = \"\";\r\n\r\n        if (!username) {\r\n            usernameError = \"*please enter username\"\r\n        }\r\n        if (!password) {\r\n            passwordError = \"*please enter password\"\r\n        }\r\n        if (usernameError || passwordError) {\r\n            setUsernameError(usernameError);\r\n            setPasswordError(passwordError);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleUsernameChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setUsername(inputValue)\r\n        setUsernameError(isEmpty)\r\n    }\r\n\r\n    const handlePasswordChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setPassword(inputValue)\r\n        setPasswordError(isEmpty)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-center\">\r\n                <div className=\"col-md-5 pr-lg-5 mb-md-0\">\r\n                    <img src={undraw_Access_account_re_8spm} alt=\"\"\r\n                         className=\"img-fluid d-none d-md-block\"/>\r\n                </div>\r\n\r\n                <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n                    <h1 style={{color: \"#e42256\", fontSize: \"55px\"}}>Sign In</h1><br/>\r\n                    <form>\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"input-group col-lg-12 mb-4\">\r\n                                <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUser}/>\r\n                                        </span>\r\n                                </div>\r\n                                <input id=\"username\"\r\n                                       type=\"text\"\r\n                                       name=\"username\"\r\n                                       placeholder=\"Username\"\r\n                                       onChange={(e) => handleUsernameChange(e)}\r\n                                       className=\"form-control bg-white border-left-0 border-md\"/>\r\n                            </div>\r\n                            <div style={{\r\n                                marginLeft: \"20px\",\r\n                                marginTop: \"-25px\",\r\n                                marginBottom: \"20px\",\r\n                                color: \"red\"\r\n                            }}>\r\n                                {usernameError}\r\n                            </div>\r\n\r\n                            <div className=\"input-group col-lg-12 mb-4\">\r\n                                <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faKey}/>\r\n                                        </span>\r\n                                </div>\r\n                                <input id=\"password\"\r\n                                       type=\"password\"\r\n                                       name=\"password\"\r\n                                       placeholder=\"Password\"\r\n                                       onChange={(e) => handlePasswordChange(e)}\r\n                                       className=\"form-control bg-white border-left-0 border-md\"/>\r\n                            </div>\r\n                            <div style={{\r\n                                marginLeft: \"20px\",\r\n                                marginTop: \"-25px\",\r\n                                marginBottom: \"20px\",\r\n                                color: \"red\"\r\n                            }}>{passwordError}</div>\r\n\r\n                            <div className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                <Button\r\n                                    style={{background: \"#e42256\"}}\r\n                                    onClick={() => onSubmit()}\r\n                                    block>\r\n                                        <span className=\"font-weight-bold\"\r\n                                              style={{color: \"#ffff\"}}>SIGN IN</span>\r\n                                </Button>\r\n                            </div>\r\n\r\n                            <div className=\"text-center w-100\">\r\n                                <p className=\"text-muted font-weight-bold\">\r\n                                    Forgot Password?\r\n                                    <a href=\"#\" className=\"text-primary ml-2\">Click here</a>\r\n                                </p>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignIn;","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\components\\not-use\\index.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\components\\navbar\\NavbarMaster.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\components\\navbar\\NavbarAdmin.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\home\\card\\CardboxMaster.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\transaction\\transactionForm\\index.js",[],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\transaction\\transactionForm\\TransactionForm.js",["194","195","196","197"],"import {InputGroupText, InputGroup, FormGroup, Form, Input, Label, Button, Col} from \"reactstrap\";\nimport Container from \"../../../components/Containers/Container\";\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\nimport {saveTransactionAction} from \"../../../actions/transactionAction\";\nimport React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\nimport {findCustomerByIdAction} from \"../../../actions/customerAction\";\nimport HeaderMaster from \"../../../components/navbar/NavbarMaster\";\nimport DropdownList from \"../../../components/DropdownList/DropdownList\";\n\nconst TransactionForm = ({savedTransaction, isLoading, error, saveTransactionAction, customer, findCustomerByIdAction}) => {\n    const {id} = useParams()\n    const [redirect] = useState(false)\n    const [data, setData] = useState({\n        customer: \"\"\n    })\n    const history = useHistory()\n\n    const handleCustomer = () => {\n        setData({\n            ...data,\n            customer: customer.id\n        })\n    }\n\n    const handleNeed = (e) => {\n        setData({...data, needType: e})\n    }\n\n    useEffect(() => {\n        if (id !== data.customer) {\n            findCustomerByIdAction(id);\n            setData({\n                ...data,\n                customer: id\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        console.log(`CUSTOMER `, customer, `DATA `, data)\n    }, [data])\n\n    useEffect(() => {\n        if (savedTransaction) {\n            history.push('/master/transaction')\n        }\n    }, [savedTransaction, history])\n\n    const handleChange = (e) => {\n        let name = e.target.name\n        let value = e.target.value\n        setData({...data, [name]: value})\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        saveTransactionAction(data)\n        console.log(data)\n    }\n    if (redirect === true) {\n        return <Redirect to='/transaction'/>\n    }\n\n    return (\n        <div>\n            <Container error={error}/>\n            <HeaderMaster/>\n            <div className=\"container\" style={{marginTop: \"10px\"}}>\n                <h1 style={{fontSize: \"3vw\", color: \"#e42556\", margin: \"3%\", textAlign: \"center\"}}>Form Transaction</h1>\n                <div className=\"col-md-13\">\n                    <div className=\"form form-container\">\n                        {!isLoading ?\n                            <Form onSubmit={handleSubmit}>\n                                <FormGroup row>\n                                    <Label for=\"notes\" sm={2}>Note</Label>\n                                    <Col sm={10}>\n                                        <Input\n                                            required\n                                            onChange={handleChange}\n                                            value={data?.notes || ''}\n                                            type=\"text\"\n                                            name=\"notes\"\n                                            id=\"notes\"\n                                            placeholder=\"input note\"/>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label for=\"income\" sm={2}>Income</Label>\n                                    <Col sm={10}>\n                                        <InputGroup>\n                                            <InputGroupText>Rp</InputGroupText>\n                                            <Input required\n                                                   name=\"income\"\n                                                   onChange={handleChange}\n                                                   value={data?.income || ''}\n                                                   placeholder=\"income\"\n                                                   type=\"number\"/>\n                                            <InputGroupText>.00</InputGroupText>\n                                        </InputGroup>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label for=\"outcome\" sm={2}>Outcome</Label>\n                                    <Col sm={10}>\n                                        <InputGroup>\n                                            <InputGroupText>Rp</InputGroupText>\n                                            <Input required\n                                                   name=\"outcome\"\n                                                   onChange={handleChange}\n                                                   value={data?.outcome || ''}\n                                                   placeholder=\"outcome\"\n                                                   type=\"number\"/>\n                                            <InputGroupText>.00</InputGroupText>\n                                        </InputGroup>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label for=\"loan\" sm={2}>Loan</Label>\n                                    <Col sm={10}>\n                                        <InputGroup>\n                                            <InputGroupText>Rp</InputGroupText>\n                                            <Input required\n                                                   onChange={handleChange}\n                                                   value={data?.loan || ''}\n                                                   placeholder=\"loan\"\n                                                   type=\"number\"\n                                                   name=\"loan\"/>\n                                            <InputGroupText>.00</InputGroupText>\n                                        </InputGroup>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label htmlFor=\"tenor\" sm={2}>Tenor</Label>\n                                    <Col sm={10}>\n                                        <Input required\n                                               onChange={handleChange}\n                                               type=\"number\"\n                                               value={data?.tenor || ''}\n                                               name=\"tenor\"\n                                               placeholder=\"tenor\"/>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label for=\"interestRate\" sm={2}>Interest Rate</Label>\n                                    <Col sm={10}>\n                                        <InputGroup>\n                                            <Input\n                                                required\n                                                onChange={handleChange}\n                                                name=\"interestRate\"\n                                                value={data?.interestRate || ''}\n                                                placeholder=\"interest rate\" min={0} max={100} type=\"number\" step=\"1\"/>\n                                            <InputGroupText>%</InputGroupText>\n                                        </InputGroup>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label for=\"select\" sm={2}>Need Type</Label>\n                                    <Col sm={10}>\n                                        <DropdownList\n                                            data={[\n                                                {value: \"CAPITAL\", label: \"CAPITAL\"},\n                                                {value: \"CONSUMPTIVE\", label: \"CONSUMPTIVE\"},\n                                                {value: \"INVESTMENT\", label: \"INVESTMENT\"}\n                                            ]}\n                                            value={data?.needType}\n                                            placeholder=\"Select Need Type\"\n                                            handleDropdown={handleNeed}\n                                        />\n                                    </Col>\n                                </FormGroup>\n                            <FormGroup check row>\n                                    <Col sm={{size: 10, offset: 2}}>\n                                        <Button style={{background: \"#e42256\"}}>\n                                            <FontAwesomeIcon icon={faSave}/>\n                                            {id > 0 ? \"  Update\" : \"  Submit\"}\n                                        </Button> {' '}\n                                        <Button href=\"/customer\" style={{background: \"#e42256\"}}>\n                                            <FontAwesomeIcon icon={faArrowLeft}/>\n                                            Cancel\n                                        </Button>\n                                    </Col>\n                                </FormGroup>\n                            </Form> :\n                            <div>Loading...</div>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        customer: state.findCustomerByIdReducer.data,\n        savedTransaction: state.saveTransactionReducer.data,\n        isLoading: state.saveTransactionReducer.isLoading,\n        error: state.saveTransactionReducer.error\n    }\n}\n\nconst mapDispatchToProps = {findCustomerByIdAction, saveTransactionAction}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionForm)","D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\components\\Containers\\index.js",[],["198","199"],"D:\\project\\final ptoject\\final-project-03-post-customer\\web-credit\\src\\pages\\customer\\customerForm\\Coba\\CobainForm.js",[],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":11,"column":8,"nodeType":"206","messageId":"207","endLine":11,"endColumn":18},{"ruleId":"208","severity":1,"message":"209","line":19,"column":17,"nodeType":"210","endLine":19,"endColumn":94},{"ruleId":"204","severity":1,"message":"211","line":17,"column":9,"nodeType":"206","messageId":"207","endLine":17,"endColumn":23},{"ruleId":"204","severity":1,"message":"212","line":4,"column":9,"nodeType":"206","messageId":"207","endLine":4,"endColumn":13},{"ruleId":"204","severity":1,"message":"213","line":6,"column":10,"nodeType":"206","messageId":"207","endLine":6,"endColumn":21},{"ruleId":"204","severity":1,"message":"214","line":6,"column":62,"nodeType":"206","messageId":"207","endLine":6,"endColumn":66},{"ruleId":"204","severity":1,"message":"215","line":6,"column":68,"nodeType":"206","messageId":"207","endLine":6,"endColumn":78},{"ruleId":"204","severity":1,"message":"216","line":6,"column":80,"nodeType":"206","messageId":"207","endLine":6,"endColumn":88},{"ruleId":"204","severity":1,"message":"217","line":28,"column":12,"nodeType":"206","messageId":"207","endLine":28,"endColumn":24},{"ruleId":"204","severity":1,"message":"218","line":28,"column":26,"nodeType":"206","messageId":"207","endLine":28,"endColumn":41},{"ruleId":"219","severity":1,"message":"220","line":36,"column":8,"nodeType":"221","endLine":36,"endColumn":18,"suggestions":"222"},{"ruleId":"204","severity":1,"message":"223","line":57,"column":11,"nodeType":"206","messageId":"207","endLine":57,"endColumn":21},{"ruleId":"224","severity":1,"message":"225","line":148,"column":52,"nodeType":"226","messageId":"227","endLine":148,"endColumn":54},{"ruleId":"204","severity":1,"message":"212","line":2,"column":9,"nodeType":"206","messageId":"207","endLine":2,"endColumn":13},{"ruleId":"204","severity":1,"message":"228","line":1,"column":9,"nodeType":"206","messageId":"207","endLine":1,"endColumn":15},{"ruleId":"204","severity":1,"message":"229","line":4,"column":9,"nodeType":"206","messageId":"207","endLine":4,"endColumn":24},{"ruleId":"204","severity":1,"message":"230","line":5,"column":9,"nodeType":"206","messageId":"207","endLine":5,"endColumn":15},{"ruleId":"204","severity":1,"message":"212","line":6,"column":9,"nodeType":"206","messageId":"207","endLine":6,"endColumn":13},{"ruleId":"204","severity":1,"message":"212","line":2,"column":9,"nodeType":"206","messageId":"207","endLine":2,"endColumn":13},{"ruleId":"204","severity":1,"message":"230","line":5,"column":49,"nodeType":"206","messageId":"207","endLine":5,"endColumn":55},{"ruleId":"231","severity":1,"message":"232","line":24,"column":33,"nodeType":"210","endLine":24,"endColumn":127},{"ruleId":"204","severity":1,"message":"233","line":14,"column":8,"nodeType":"206","messageId":"207","endLine":14,"endColumn":12},{"ruleId":"204","severity":1,"message":"234","line":36,"column":19,"nodeType":"206","messageId":"207","endLine":36,"endColumn":23},{"ruleId":"204","severity":1,"message":"235","line":57,"column":13,"nodeType":"206","messageId":"207","endLine":57,"endColumn":26},{"ruleId":"204","severity":1,"message":"236","line":60,"column":13,"nodeType":"206","messageId":"207","endLine":60,"endColumn":26},{"ruleId":"204","severity":1,"message":"237","line":63,"column":13,"nodeType":"206","messageId":"207","endLine":63,"endColumn":23},{"ruleId":"204","severity":1,"message":"238","line":66,"column":13,"nodeType":"206","messageId":"207","endLine":66,"endColumn":26},{"ruleId":"204","severity":1,"message":"239","line":69,"column":13,"nodeType":"206","messageId":"207","endLine":69,"endColumn":22},{"ruleId":"204","severity":1,"message":"240","line":72,"column":13,"nodeType":"206","messageId":"207","endLine":72,"endColumn":32},{"ruleId":"204","severity":1,"message":"241","line":112,"column":11,"nodeType":"206","messageId":"207","endLine":112,"endColumn":36},{"ruleId":"204","severity":1,"message":"234","line":22,"column":19,"nodeType":"206","messageId":"207","endLine":22,"endColumn":23},{"ruleId":"242","severity":1,"message":"243","line":133,"column":37,"nodeType":"210","endLine":133,"endColumn":79},{"ruleId":"204","severity":1,"message":"244","line":20,"column":11,"nodeType":"206","messageId":"207","endLine":20,"endColumn":25},{"ruleId":"204","severity":1,"message":"223","line":27,"column":11,"nodeType":"206","messageId":"207","endLine":27,"endColumn":21},{"ruleId":"219","severity":1,"message":"245","line":39,"column":8,"nodeType":"221","endLine":39,"endColumn":10,"suggestions":"246"},{"ruleId":"219","severity":1,"message":"247","line":43,"column":8,"nodeType":"221","endLine":43,"endColumn":14,"suggestions":"248"},{"ruleId":"200","replacedBy":"249"},{"ruleId":"202","replacedBy":"250"},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"no-unused-vars","'CobainForm' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'updateCustomer' is defined but never used.","'Link' is defined but never used.","'CustomInput' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardBody' is defined but never used.","'employeeType' is assigned a value but never used.","'setEmployeeType' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data.id', 'findCustomerByIdAction', and 'id'. Either include them or remove the dependency array. If 'findCustomerByIdAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["253"],"'handleNeed' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faSave' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'swal' is defined but never used.","'data' is assigned a value but never used.","'fullNameError' is assigned a value but never used.","'usernameError' is assigned a value but never used.","'emailError' is assigned a value but never used.","'passwordError' is assigned a value but never used.","'roleError' is assigned a value but never used.","'profilePictureError' is assigned a value but never used.","'handleProfilPictureChange' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'handleCustomer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'findCustomerByIdAction', and 'id'. Either include them or remove the dependency array. If 'findCustomerByIdAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["254"],"React Hook useEffect has a missing dependency: 'customer'. Either include it or remove the dependency array.",["255"],["251"],["252"],"no-global-assign","no-unsafe-negation",{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},"Update the dependencies array to be: [customer, data.id, findCustomerByIdAction, id]",{"range":"262","text":"263"},"Update the dependencies array to be: [data, findCustomerByIdAction, id]",{"range":"264","text":"265"},"Update the dependencies array to be: [customer, data]",{"range":"266","text":"267"},[1447,1457],"[customer, data.id, findCustomerByIdAction, id]",[1372,1374],"[data, findCustomerByIdAction, id]",[1464,1470],"[customer, data]"]